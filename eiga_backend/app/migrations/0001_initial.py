# Generated by Django 4.2.3 on 2023-10-29 16:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Bangumi",
            fields=[
                (
                    "bangumi_id",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                ("bangumi_name", models.CharField(max_length=32, verbose_name="番组名")),
                ("bangumi_intro", models.CharField(max_length=8000, verbose_name="简介")),
                ("bangumi_score", models.FloatField(verbose_name="评分")),
                ("rank", models.IntegerField(verbose_name="排名")),
            ],
            options={"verbose_name": "番组", "db_table": "tb_bangumi",},
        ),
        migrations.CreateModel(
            name="Blog",
            fields=[
                (
                    "blog_id",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                ("blog_title", models.CharField(max_length=32, verbose_name="标题")),
                ("content", models.CharField(max_length=8000, verbose_name="内容")),
                ("time", models.DateTimeField(verbose_name="时间")),
            ],
            options={"verbose_name": "日志", "db_table": "tb_blog",},
        ),
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "character_id",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                ("character_name", models.CharField(max_length=32, verbose_name="角色名")),
                ("intro", models.CharField(max_length=8000, verbose_name="简介")),
            ],
            options={"verbose_name": "角色", "db_table": "tb_character",},
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "user_id",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                ("user_name", models.CharField(max_length=32, verbose_name="用户名")),
                ("email", models.CharField(max_length=32, verbose_name="邮箱")),
                ("password", models.CharField(max_length=32, verbose_name="密码")),
                ("permission", models.CharField(max_length=32, verbose_name="权限")),
            ],
            options={"verbose_name": "学生", "db_table": "tb_user",},
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "comment_id",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                ("content", models.CharField(max_length=8000, verbose_name="内容")),
                ("time", models.DateTimeField(verbose_name="时间")),
                (
                    "bangumi_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app.bangumi",
                    ),
                ),
                (
                    "blog_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app.blog",
                    ),
                ),
                (
                    "character_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app.character",
                    ),
                ),
            ],
            options={"verbose_name": "评论", "db_table": "tb_comment",},
        ),
        migrations.CreateModel(
            name="CharacterBangumi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bangumi_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.bangumi"
                    ),
                ),
                (
                    "character_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.character"
                    ),
                ),
            ],
            options={"verbose_name": "角色-番组", "db_table": "tb_characterbangumi",},
        ),
        migrations.CreateModel(
            name="BlogBangumi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bangumi_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.bangumi"
                    ),
                ),
                (
                    "blog_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.blog"
                    ),
                ),
            ],
            options={"verbose_name": "番组-日志", "db_table": "tb_blogbangumi",},
        ),
        migrations.CreateModel(
            name="Score",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.FloatField(verbose_name="评分")),
                (
                    "bangumi_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.bangumi"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.user"
                    ),
                ),
            ],
            options={
                "verbose_name": "评分",
                "db_table": "tb_score",
                "unique_together": {("user_id", "bangumi_id")},
            },
        ),
        migrations.CreateModel(
            name="BangumiRelationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("relation", models.CharField(max_length=32, verbose_name="关系")),
                (
                    "a_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="a_relationships",
                        to="app.bangumi",
                    ),
                ),
                (
                    "b_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="b_relationships",
                        to="app.bangumi",
                    ),
                ),
            ],
            options={
                "verbose_name": "番组关系",
                "db_table": "tb_bangumibangumi",
                "unique_together": {("a_id", "b_id")},
            },
        ),
    ]
